name: EnRust CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
        components: rustfmt clippy

    - name: Check formatting
      run: cargo fmt -- --check

    - name: Clippy lint
      run: cargo clippy -- -D warnings

    - name: Build
      run: cargo build --release --verbose

    - name: Run tests
      run: cargo test --verbose

    - name: Run benchmarks
      run: cargo bench --verbose

  openbench-test:
    # ðŸ‘‡ Only run this job if triggered by a PR
    if: ${{ github.event_name == 'pull_request' }}
    needs: build-and-test
    runs-on: self-hosted
    container:
      image: python:3.12-slim
      options: --add-host=host.docker.internal:host-gateway
    env:
      OPENBENCH_URL: ${{ vars.OPENBENCH_URL}}
      OPENBENCH_USER: ${{ secrets.OPENBENCH_USER }}
      OPENBENCH_PASS: ${{ secrets.OPENBENCH_PASS }}

      BASE_BRANCH: ${{ github.event.pull_request.base.ref || 'main' }}
      DEV_BRANCH: ${{ github.head_ref || github.ref_name }}
      COMMIT_SHA: ${{ github.sha }}
    steps:
      - uses: actions/checkout@v4
      - name: Install python dependencies
        run: pip install -r scripts/requirements.txt
      - name: Install envsubst and curl
        run: apt-get update && apt-get install -y gettext-base curl
      - name: Prepare config
        run: envsubst < scripts/openbench_config.template.yaml > openbench_config.yaml
      - name: Create OpenBench test
        run: |
          python scripts/openbench_create_test.py --config openbench_config.yaml --commit "${COMMIT_SHA}"
      - name: Set PR status to pending
        run: |
          curl -X POST \
          -H "Authorization: Bearer ${{ secrets.PAT_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
          -d '{
            "state": "pending",
            "target_url": "${{ vars.OPENBENCH_URL}}/test/${{ env.TEST_ID }}",
            "description": "Waiting for OpenBench test completion",
            "context": "OpenBench"
          }'
